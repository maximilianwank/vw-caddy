AWSTemplateFormatVersion: 2010-09-09
Description: 'AWS CloudFormation Sample Template'
Resources:
  VwCaddyInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t3a.nano
      ImageId: ami-098c93bd9d119c051
      SecurityGroupIds:
        - sg-090b540c2f51d024d  # ToDo: Generate a new security group
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 4
      KeyName: dev-mw-ec2
      UserData: !Base64
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              yum install -y aws-cfn-bootstrap
            - |
              # Install the files and packages from the metadata
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref AWS::StackName
            - '         --resource VwCaddyInstance '
            - '         --region '
            - !Ref AWS::Region
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              htop: []
              docker: []
          files:
            /tmp/install_docker_compose.sh:
              content: |
                #!/bin/bash
                # Install for all users
                mkdir -p /usr/local/lib/docker/cli-plugins
                curl -sL https://github.com/docker/compose/releases/latest/download/docker-compose-linux-$(uname -m) \
                  -o /usr/local/lib/docker/cli-plugins/docker-compose
                
                # Set ownership to root and make executable
                chown root:root /usr/local/lib/docker/cli-plugins/docker-compose
                chmod +x /usr/local/lib/docker/cli-plugins/docker-compose
              mode: "000744"
              owner: "root"
              group: "root"
          services:
            systemd:
              docker:
                enabled: 'true'
                ensureRunning: 'true'
