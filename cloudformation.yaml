AWSTemplateFormatVersion: 2010-09-09
Description: "AWS CloudFormation Sample Template"
Resources:
  VwCaddyInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: t3a.nano
      ImageId: ami-098c93bd9d119c051
      SecurityGroupIds:
        - sg-090b540c2f51d024d  # ToDo: Generate a new security group
        - !Ref HttpHttpsSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 4
      KeyName: dev-mw-ec2
      UserData: !Base64
        "Fn::Join":
          - ""
          - - |
              #!/bin/bash -xe
            - |
              yum install -y aws-cfn-bootstrap
            - |
              # Install the files and packages from the metadata
            - "/opt/aws/bin/cfn-init -v "
            - "         --stack "
            - !Ref AWS::StackName
            - "         --resource VwCaddyInstance "
            - "         --region "
            - !Ref AWS::Region
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              argon2: []
              docker: []
              htop: []
          files:
            /tmp/install_docker_compose.sh:
              content: |
                #!/bin/bash
                # Install for all users
                mkdir -p /usr/local/lib/docker/cli-plugins
                curl -sL https://github.com/docker/compose/releases/latest/download/docker-compose-linux-$(uname -m) \
                  -o /usr/local/bin/docker-compose
                
                # Set ownership to root and make executable
                chown root:root /usr/local/bin/docker-compose
                chmod +x /usr/local/bin/docker-compose
              mode: "000744"
              owner: "root"
              group: "root"
            /tmp/load_create_files.sh:
              content: |
                #!/bin/bash
                curl -O https://raw.githubusercontent.com/maximilianwank/vw-caddy/deploy/create_files.sh
                chmod +x create_files.sh
                ./create_files.sh
                rm create_files.sh
              mode: "000744"
              owner: "root"
              group: "root"
          commands:
            01_install_docker_compose:
              command: "/tmp/install_docker_compose.sh"
            02_create_files:
              command: "/tmp/load_create_files.sh"
          services:
            systemd:
              docker:
                enabled: "true"
                ensureRunning: "true"
  HttpHttpsSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable HTTP and HTTPS access"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: TCP
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          ToPort: 443
          IpProtocol: TCP
Outputs:
  PublicDNS:
    Description: "Public DNSName of the newly created EC2 instance"
    Value: !GetAtt VwCaddyInstance.PublicDnsName
  PublicIP:
    Description: "Public IP address of the newly created EC2 instance"
    Value: !GetAtt VwCaddyInstance.PublicIp
